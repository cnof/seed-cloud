package ${packageName}.controller;

import com.misssyc.seed.common.core.enums.OperateType;
import com.misssyc.seed.common.core.web.Result;
import com.misssyc.seed.common.core.web.ResultHelper;
import com.misssyc.seed.common.log.annotation.Log;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.pojo.vo.${ClassName}VO;
import ${packageName}.pojo.vo.${ClassName}QueryVO;
import ${packageName}.pojo.vo.${ClassName}AddOrUpdateVO;
import ${packageName}.service.${ClassName}Service;
import com.misssyc.seed.common.core.vo.PageVO;
import com.misssyc.seed.common.core.vo.PageQueryVO;
import java.lang.Integer;

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @since  ${datetime}
 */
@Api(tags = "${functionName}")
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller {

    @Autowired
    private ${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}
     *
     * @param ${pkColumn.javaField} ${functionName}主键
     * @return ${functionName}
     */
    public Result<${ClassName}> select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField}) {
        return ResultHelper.ok(${className}Service.select${ClassName}ById(${pkColumn.javaField}));
    }

    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public Result<PageVO<${ClassName}>> select${ClassName}List(PageQueryVO<${ClassName}QueryVO> ${className}) {
        return ResultHelper.ok(${className}Service.select${ClassName}List(${className}));
    }

    /**
     * 新增${functionName}
     *
     * @param ${className} ${functionName}
     */
    public Result<${pkColumn.javaType}> insert${ClassName}(${ClassName}AddOrUpdateVO ${className}) {
        return ResultHelper.ok(${className}Service.insert${ClassName}(${className}));
    }

    /**
     * 修改${functionName}
     *
     * @param ${className} ${functionName}
     */
    public Result<Void> update${ClassName}(${ClassName}AddOrUpdateVO ${className}) {
        return ResultHelper.ok(${className}Service.update${ClassName}(${className}));
    }

    /**
     * 批量删除${functionName}
     *
     * @param ${pkColumn.javaField}s 需要删除的${functionName}主键集合
     * @return 结果
     */
    public Result<Integer> delete${ClassName}ByIds(List<${pkColumn.javaType}> ${pkColumn.javaField}s) {
        return ResultHelper.ok(${className}Servicedelete${ClassName}ByIds(${pkColumn.javaField}s));
    }
}